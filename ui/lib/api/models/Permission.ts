/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentType } from './ContentType';
import {
    ContentTypeFromJSON,
    ContentTypeFromJSONTyped,
    ContentTypeToJSON,
} from './ContentType';

/**
 * 
 * @export
 * @interface Permission
 */
export interface Permission {
    /**
     * 
     * @type {number}
     * @memberof Permission
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Permission
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Permission
     */
    codename: string;
    /**
     * 
     * @type {ContentType}
     * @memberof Permission
     */
    contentType: ContentType;
}

/**
 * Check if a given object implements the Permission interface.
 */
export function instanceOfPermission(value: object): value is Permission {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('codename' in value) || value['codename'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    return true;
}

export function PermissionFromJSON(json: any): Permission {
    return PermissionFromJSONTyped(json, false);
}

export function PermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Permission {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'codename': json['codename'],
        'contentType': ContentTypeFromJSON(json['content_type']),
    };
}

export function PermissionToJSON(value?: Permission | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'codename': value['codename'],
        'content_type': ContentTypeToJSON(value['contentType']),
    };
}

