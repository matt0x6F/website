/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserPublic } from './UserPublic';
import {
    UserPublicFromJSON,
    UserPublicFromJSONTyped,
    UserPublicToJSON,
} from './UserPublic';
import type { SeriesPublic } from './SeriesPublic';
import {
    SeriesPublicFromJSON,
    SeriesPublicFromJSONTyped,
    SeriesPublicToJSON,
} from './SeriesPublic';

/**
 * 
 * @export
 * @interface PostPublic
 */
export interface PostPublic {
    /**
     * 
     * @type {string}
     * @memberof PostPublic
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof PostPublic
     */
    content: string;
    /**
     * 
     * @type {Date}
     * @memberof PostPublic
     */
    publishedAt?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof PostPublic
     */
    seriesId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof PostPublic
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof PostPublic
     */
    slug: string;
    /**
     * 
     * @type {UserPublic}
     * @memberof PostPublic
     */
    author: UserPublic;
    /**
     * 
     * @type {Date}
     * @memberof PostPublic
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof PostPublic
     */
    updatedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof PostPublic
     */
    commentCount?: number;
    /**
     * 
     * @type {SeriesPublic}
     * @memberof PostPublic
     */
    series?: SeriesPublic | null;
}

/**
 * Check if a given object implements the PostPublic interface.
 */
export function instanceOfPostPublic(value: object): value is PostPublic {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function PostPublicFromJSON(json: any): PostPublic {
    return PostPublicFromJSONTyped(json, false);
}

export function PostPublicFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostPublic {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'content': json['content'],
        'publishedAt': json['published_at'] == null ? undefined : (new Date(json['published_at'])),
        'seriesId': json['series_id'] == null ? undefined : json['series_id'],
        'id': json['id'],
        'slug': json['slug'],
        'author': UserPublicFromJSON(json['author']),
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'commentCount': json['comment_count'] == null ? undefined : json['comment_count'],
        'series': json['series'] == null ? undefined : SeriesPublicFromJSON(json['series']),
    };
}

export function PostPublicToJSON(value?: PostPublic | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'content': value['content'],
        'published_at': value['publishedAt'] == null ? undefined : ((value['publishedAt'] as any).toISOString()),
        'series_id': value['seriesId'],
        'id': value['id'],
        'slug': value['slug'],
        'author': UserPublicToJSON(value['author']),
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'comment_count': value['commentCount'],
        'series': SeriesPublicToJSON(value['series']),
    };
}

