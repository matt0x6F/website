/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ExperienceSchema
 */
export interface ExperienceSchema {
    /**
     * 
     * @type {string}
     * @memberof ExperienceSchema
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ExperienceSchema
     */
    company: string;
    /**
     * 
     * @type {Date}
     * @memberof ExperienceSchema
     */
    startDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof ExperienceSchema
     */
    endDate?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof ExperienceSchema
     */
    isCurrent?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ExperienceSchema
     */
    achievements: string;
}

/**
 * Check if a given object implements the ExperienceSchema interface.
 */
export function instanceOfExperienceSchema(value: object): value is ExperienceSchema {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('company' in value) || value['company'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('achievements' in value) || value['achievements'] === undefined) return false;
    return true;
}

export function ExperienceSchemaFromJSON(json: any): ExperienceSchema {
    return ExperienceSchemaFromJSONTyped(json, false);
}

export function ExperienceSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperienceSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'company': json['company'],
        'startDate': (new Date(json['start_date'])),
        'endDate': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'isCurrent': json['is_current'] == null ? undefined : json['is_current'],
        'achievements': json['achievements'],
    };
}

export function ExperienceSchemaToJSON(value?: ExperienceSchema | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'company': value['company'],
        'start_date': ((value['startDate']).toISOString().substring(0,10)),
        'end_date': value['endDate'] == null ? undefined : ((value['endDate'] as any).toISOString().substring(0,10)),
        'is_current': value['isCurrent'],
        'achievements': value['achievements'],
    };
}

