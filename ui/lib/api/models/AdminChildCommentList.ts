/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostDetails } from './PostDetails';
import {
    PostDetailsFromJSON,
    PostDetailsFromJSONTyped,
    PostDetailsToJSON,
} from './PostDetails';
import type { AuthorSummary } from './AuthorSummary';
import {
    AuthorSummaryFromJSON,
    AuthorSummaryFromJSONTyped,
    AuthorSummaryToJSON,
} from './AuthorSummary';
import type { AdminCommentList } from './AdminCommentList';
import {
    AdminCommentListFromJSON,
    AdminCommentListFromJSONTyped,
    AdminCommentListToJSON,
} from './AdminCommentList';

/**
 * 
 * @export
 * @interface AdminChildCommentList
 */
export interface AdminChildCommentList {
    /**
     * 
     * @type {number}
     * @memberof AdminChildCommentList
     */
    id: number;
    /**
     * 
     * @type {AuthorSummary}
     * @memberof AdminChildCommentList
     */
    author: AuthorSummary;
    /**
     * 
     * @type {string}
     * @memberof AdminChildCommentList
     */
    content: string;
    /**
     * 
     * @type {PostDetails}
     * @memberof AdminChildCommentList
     */
    post: PostDetails;
    /**
     * 
     * @type {Array<AdminCommentList>}
     * @memberof AdminChildCommentList
     */
    children?: Array<AdminCommentList> | null;
    /**
     * 
     * @type {boolean}
     * @memberof AdminChildCommentList
     */
    visible: boolean;
    /**
     * 
     * @type {Date}
     * @memberof AdminChildCommentList
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AdminChildCommentList
     */
    updatedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof AdminChildCommentList
     */
    reviewed: boolean;
    /**
     * 
     * @type {string}
     * @memberof AdminChildCommentList
     */
    note?: string | null;
}

/**
 * Check if a given object implements the AdminChildCommentList interface.
 */
export function instanceOfAdminChildCommentList(value: object): value is AdminChildCommentList {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('post' in value) || value['post'] === undefined) return false;
    if (!('visible' in value) || value['visible'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    if (!('reviewed' in value) || value['reviewed'] === undefined) return false;
    return true;
}

export function AdminChildCommentListFromJSON(json: any): AdminChildCommentList {
    return AdminChildCommentListFromJSONTyped(json, false);
}

export function AdminChildCommentListFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdminChildCommentList {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'author': AuthorSummaryFromJSON(json['author']),
        'content': json['content'],
        'post': PostDetailsFromJSON(json['post']),
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(AdminCommentListFromJSON)),
        'visible': json['visible'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'reviewed': json['reviewed'],
        'note': json['note'] == null ? undefined : json['note'],
    };
}

export function AdminChildCommentListToJSON(value?: AdminChildCommentList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'author': AuthorSummaryToJSON(value['author']),
        'content': value['content'],
        'post': PostDetailsToJSON(value['post']),
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(AdminCommentListToJSON)),
        'visible': value['visible'],
        'created_at': ((value['createdAt']).toISOString()),
        'updated_at': ((value['updatedAt']).toISOString()),
        'reviewed': value['reviewed'],
        'note': value['note'],
    };
}

