/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeedItem } from './FeedItem';
import {
    FeedItemFromJSON,
    FeedItemFromJSONTyped,
    FeedItemToJSON,
} from './FeedItem';
import type { Hub } from './Hub';
import {
    HubFromJSON,
    HubFromJSONTyped,
    HubToJSON,
} from './Hub';
import type { AuthorSummary } from './AuthorSummary';
import {
    AuthorSummaryFromJSON,
    AuthorSummaryFromJSONTyped,
    AuthorSummaryToJSON,
} from './AuthorSummary';

/**
 * 
 * @export
 * @interface JSONFeed
 */
export interface JSONFeed {
    /**
     * The URL of the version of the format the feed uses. Must be https://jsonfeed.org/version/1.1
     * @type {string}
     * @memberof JSONFeed
     */
    version?: string;
    /**
     * The name of the feed, which will often correspond to the name of the website.
     * @type {string}
     * @memberof JSONFeed
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof JSONFeed
     */
    homePageUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof JSONFeed
     */
    feedUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof JSONFeed
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof JSONFeed
     */
    userComment?: string | null;
    /**
     * 
     * @type {string}
     * @memberof JSONFeed
     */
    nextUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof JSONFeed
     */
    icon?: string | null;
    /**
     * 
     * @type {string}
     * @memberof JSONFeed
     */
    favicon?: string | null;
    /**
     * 
     * @type {Array<AuthorSummary>}
     * @memberof JSONFeed
     */
    authors?: Array<AuthorSummary> | null;
    /**
     * 
     * @type {string}
     * @memberof JSONFeed
     */
    language?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof JSONFeed
     */
    expired?: boolean | null;
    /**
     * 
     * @type {Array<Hub>}
     * @memberof JSONFeed
     */
    hubs?: Array<Hub> | null;
    /**
     * The list of items in the feed. Must have at least one item.
     * @type {Array<FeedItem>}
     * @memberof JSONFeed
     */
    items: Array<FeedItem>;
}

/**
 * Check if a given object implements the JSONFeed interface.
 */
export function instanceOfJSONFeed(value: object): value is JSONFeed {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function JSONFeedFromJSON(json: any): JSONFeed {
    return JSONFeedFromJSONTyped(json, false);
}

export function JSONFeedFromJSONTyped(json: any, ignoreDiscriminator: boolean): JSONFeed {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'] == null ? undefined : json['version'],
        'title': json['title'],
        'homePageUrl': json['home_page_url'] == null ? undefined : json['home_page_url'],
        'feedUrl': json['feed_url'] == null ? undefined : json['feed_url'],
        'description': json['description'] == null ? undefined : json['description'],
        'userComment': json['user_comment'] == null ? undefined : json['user_comment'],
        'nextUrl': json['next_url'] == null ? undefined : json['next_url'],
        'icon': json['icon'] == null ? undefined : json['icon'],
        'favicon': json['favicon'] == null ? undefined : json['favicon'],
        'authors': json['authors'] == null ? undefined : ((json['authors'] as Array<any>).map(AuthorSummaryFromJSON)),
        'language': json['language'] == null ? undefined : json['language'],
        'expired': json['expired'] == null ? undefined : json['expired'],
        'hubs': json['hubs'] == null ? undefined : ((json['hubs'] as Array<any>).map(HubFromJSON)),
        'items': ((json['items'] as Array<any>).map(FeedItemFromJSON)),
    };
}

export function JSONFeedToJSON(value?: JSONFeed | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'version': value['version'],
        'title': value['title'],
        'home_page_url': value['homePageUrl'],
        'feed_url': value['feedUrl'],
        'description': value['description'],
        'user_comment': value['userComment'],
        'next_url': value['nextUrl'],
        'icon': value['icon'],
        'favicon': value['favicon'],
        'authors': value['authors'] == null ? undefined : ((value['authors'] as Array<any>).map(AuthorSummaryToJSON)),
        'language': value['language'],
        'expired': value['expired'],
        'hubs': value['hubs'] == null ? undefined : ((value['hubs'] as Array<any>).map(HubToJSON)),
        'items': ((value['items'] as Array<any>).map(FeedItemToJSON)),
    };
}

