/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ShareCodeSchema
 */
export interface ShareCodeSchema {
    /**
     * 
     * @type {number}
     * @memberof ShareCodeSchema
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ShareCodeSchema
     */
    code: string;
    /**
     * 
     * @type {string}
     * @memberof ShareCodeSchema
     */
    note?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ShareCodeSchema
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ShareCodeSchema
     */
    expiresAt?: Date | null;
}

/**
 * Check if a given object implements the ShareCodeSchema interface.
 */
export function instanceOfShareCodeSchema(value: object): value is ShareCodeSchema {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function ShareCodeSchemaFromJSON(json: any): ShareCodeSchema {
    return ShareCodeSchemaFromJSONTyped(json, false);
}

export function ShareCodeSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShareCodeSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'code': json['code'],
        'note': json['note'] == null ? undefined : json['note'],
        'createdAt': (new Date(json['created_at'])),
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
    };
}

export function ShareCodeSchemaToJSON(value?: ShareCodeSchema | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'code': value['code'],
        'note': value['note'],
        'created_at': ((value['createdAt']).toISOString()),
        'expires_at': value['expiresAt'] == null ? undefined : ((value['expiresAt'] as any).toISOString()),
    };
}

