/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostSummary } from './PostSummary';
import {
    PostSummaryFromJSON,
    PostSummaryFromJSONTyped,
    PostSummaryToJSON,
} from './PostSummary';

/**
 * 
 * @export
 * @interface FileDetails
 */
export interface FileDetails {
    /**
     * 
     * @type {number}
     * @memberof FileDetails
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof FileDetails
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof FileDetails
     */
    contentType: string;
    /**
     * 
     * @type {string}
     * @memberof FileDetails
     */
    charset: string | null;
    /**
     * 
     * @type {number}
     * @memberof FileDetails
     */
    size: number;
    /**
     * 
     * @type {string}
     * @memberof FileDetails
     */
    location: string;
    /**
     * 
     * @type {Date}
     * @memberof FileDetails
     */
    createdAt: Date;
    /**
     * 
     * @type {Array<PostSummary>}
     * @memberof FileDetails
     */
    posts: Array<PostSummary>;
    /**
     * 
     * @type {string}
     * @memberof FileDetails
     */
    visibility: string;
}

/**
 * Check if a given object implements the FileDetails interface.
 */
export function instanceOfFileDetails(value: object): value is FileDetails {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    if (!('charset' in value) || value['charset'] === undefined) return false;
    if (!('size' in value) || value['size'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('posts' in value) || value['posts'] === undefined) return false;
    if (!('visibility' in value) || value['visibility'] === undefined) return false;
    return true;
}

export function FileDetailsFromJSON(json: any): FileDetails {
    return FileDetailsFromJSONTyped(json, false);
}

export function FileDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'contentType': json['content_type'],
        'charset': json['charset'],
        'size': json['size'],
        'location': json['location'],
        'createdAt': (new Date(json['created_at'])),
        'posts': ((json['posts'] as Array<any>).map(PostSummaryFromJSON)),
        'visibility': json['visibility'],
    };
}

export function FileDetailsToJSON(value?: FileDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'content_type': value['contentType'],
        'charset': value['charset'],
        'size': value['size'],
        'location': value['location'],
        'created_at': ((value['createdAt']).toISOString()),
        'posts': ((value['posts'] as Array<any>).map(PostSummaryToJSON)),
        'visibility': value['visibility'],
    };
}

