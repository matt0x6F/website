/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthorSummary } from './AuthorSummary';
import {
    AuthorSummaryFromJSON,
    AuthorSummaryFromJSONTyped,
    AuthorSummaryToJSON,
} from './AuthorSummary';
import type { Attachment } from './Attachment';
import {
    AttachmentFromJSON,
    AttachmentFromJSONTyped,
    AttachmentToJSON,
} from './Attachment';

/**
 * 
 * @export
 * @interface FeedItem
 */
export interface FeedItem {
    /**
     * Unique for that item for that feed over time. If an item is ever updated, the id should be unchanged. New items should never use a previously-used id.
     * @type {string}
     * @memberof FeedItem
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    externalUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    contentHtml?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    contentText?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    summary?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    image?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    bannerImage?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof FeedItem
     */
    datePublished?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof FeedItem
     */
    dateModified?: Date | null;
    /**
     * 
     * @type {Array<AuthorSummary>}
     * @memberof FeedItem
     */
    authors?: Array<AuthorSummary> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof FeedItem
     */
    tags?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof FeedItem
     */
    language?: string | null;
    /**
     * 
     * @type {Array<Attachment>}
     * @memberof FeedItem
     */
    attachments?: Array<Attachment> | null;
}

/**
 * Check if a given object implements the FeedItem interface.
 */
export function instanceOfFeedItem(value: object): value is FeedItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function FeedItemFromJSON(json: any): FeedItem {
    return FeedItemFromJSONTyped(json, false);
}

export function FeedItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): FeedItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'] == null ? undefined : json['url'],
        'externalUrl': json['external_url'] == null ? undefined : json['external_url'],
        'title': json['title'] == null ? undefined : json['title'],
        'contentHtml': json['content_html'] == null ? undefined : json['content_html'],
        'contentText': json['content_text'] == null ? undefined : json['content_text'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'image': json['image'] == null ? undefined : json['image'],
        'bannerImage': json['banner_image'] == null ? undefined : json['banner_image'],
        'datePublished': json['date_published'] == null ? undefined : (new Date(json['date_published'])),
        'dateModified': json['date_modified'] == null ? undefined : (new Date(json['date_modified'])),
        'authors': json['authors'] == null ? undefined : ((json['authors'] as Array<any>).map(AuthorSummaryFromJSON)),
        'tags': json['tags'] == null ? undefined : json['tags'],
        'language': json['language'] == null ? undefined : json['language'],
        'attachments': json['attachments'] == null ? undefined : ((json['attachments'] as Array<any>).map(AttachmentFromJSON)),
    };
}

export function FeedItemToJSON(value?: FeedItem | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'url': value['url'],
        'external_url': value['externalUrl'],
        'title': value['title'],
        'content_html': value['contentHtml'],
        'content_text': value['contentText'],
        'summary': value['summary'],
        'image': value['image'],
        'banner_image': value['bannerImage'],
        'date_published': value['datePublished'] == null ? undefined : ((value['datePublished'] as any).toISOString()),
        'date_modified': value['dateModified'] == null ? undefined : ((value['dateModified'] as any).toISOString()),
        'authors': value['authors'] == null ? undefined : ((value['authors'] as Array<any>).map(AuthorSummaryToJSON)),
        'tags': value['tags'],
        'language': value['language'],
        'attachments': value['attachments'] == null ? undefined : ((value['attachments'] as Array<any>).map(AttachmentToJSON)),
    };
}

