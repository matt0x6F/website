/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Group } from './Group';
import {
    GroupFromJSON,
    GroupFromJSONTyped,
    GroupToJSON,
} from './Group';
import type { Permission } from './Permission';
import {
    PermissionFromJSON,
    PermissionFromJSONTyped,
    PermissionToJSON,
} from './Permission';

/**
 * 
 * @export
 * @interface UserDetails
 */
export interface UserDetails {
    /**
     * 
     * @type {number}
     * @memberof UserDetails
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UserDetails
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetails
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetails
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof UserDetails
     */
    lastName: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserDetails
     */
    isStaff: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserDetails
     */
    isActive: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserDetails
     */
    isSuperuser: boolean;
    /**
     * 
     * @type {Date}
     * @memberof UserDetails
     */
    dateJoined: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserDetails
     */
    lastLogin: Date;
    /**
     * 
     * @type {string}
     * @memberof UserDetails
     */
    avatarLink?: string | null;
    /**
     * 
     * @type {Array<Group>}
     * @memberof UserDetails
     */
    groups: Array<Group>;
    /**
     * 
     * @type {Array<Permission>}
     * @memberof UserDetails
     */
    userPermissions: Array<Permission>;
}

/**
 * Check if a given object implements the UserDetails interface.
 */
export function instanceOfUserDetails(value: object): value is UserDetails {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('isStaff' in value) || value['isStaff'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    if (!('isSuperuser' in value) || value['isSuperuser'] === undefined) return false;
    if (!('dateJoined' in value) || value['dateJoined'] === undefined) return false;
    if (!('lastLogin' in value) || value['lastLogin'] === undefined) return false;
    if (!('groups' in value) || value['groups'] === undefined) return false;
    if (!('userPermissions' in value) || value['userPermissions'] === undefined) return false;
    return true;
}

export function UserDetailsFromJSON(json: any): UserDetails {
    return UserDetailsFromJSONTyped(json, false);
}

export function UserDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'email': json['email'],
        'firstName': json['first_name'],
        'lastName': json['last_name'],
        'isStaff': json['is_staff'],
        'isActive': json['is_active'],
        'isSuperuser': json['is_superuser'],
        'dateJoined': (new Date(json['date_joined'])),
        'lastLogin': (new Date(json['last_login'])),
        'avatarLink': json['avatar_link'] == null ? undefined : json['avatar_link'],
        'groups': ((json['groups'] as Array<any>).map(GroupFromJSON)),
        'userPermissions': ((json['user_permissions'] as Array<any>).map(PermissionFromJSON)),
    };
}

export function UserDetailsToJSON(value?: UserDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'username': value['username'],
        'email': value['email'],
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'is_staff': value['isStaff'],
        'is_active': value['isActive'],
        'is_superuser': value['isSuperuser'],
        'date_joined': ((value['dateJoined']).toISOString()),
        'last_login': ((value['lastLogin']).toISOString()),
        'avatar_link': value['avatarLink'],
        'groups': ((value['groups'] as Array<any>).map(GroupToJSON)),
        'user_permissions': ((value['userPermissions'] as Array<any>).map(PermissionToJSON)),
    };
}

