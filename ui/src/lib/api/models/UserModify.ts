/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Group } from './Group';
import {
    GroupFromJSON,
    GroupFromJSONTyped,
    GroupToJSON,
} from './Group';
import type { Permission } from './Permission';
import {
    PermissionFromJSON,
    PermissionFromJSONTyped,
    PermissionToJSON,
} from './Permission';

/**
 * 
 * @export
 * @interface UserModify
 */
export interface UserModify {
    /**
     * 
     * @type {string}
     * @memberof UserModify
     */
    username?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserModify
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserModify
     */
    firstName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserModify
     */
    lastName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserModify
     */
    password?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserModify
     */
    isStaff?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserModify
     */
    isActive?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserModify
     */
    isSuperuser?: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof UserModify
     */
    avatarLink?: string | null;
    /**
     * 
     * @type {Array<Group>}
     * @memberof UserModify
     */
    groups?: Array<Group> | null;
    /**
     * 
     * @type {Array<Permission>}
     * @memberof UserModify
     */
    userPermissions?: Array<Permission> | null;
}

/**
 * Check if a given object implements the UserModify interface.
 */
export function instanceOfUserModify(value: object): value is UserModify {
    return true;
}

export function UserModifyFromJSON(json: any): UserModify {
    return UserModifyFromJSONTyped(json, false);
}

export function UserModifyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserModify {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'] == null ? undefined : json['username'],
        'email': json['email'] == null ? undefined : json['email'],
        'firstName': json['first_name'] == null ? undefined : json['first_name'],
        'lastName': json['last_name'] == null ? undefined : json['last_name'],
        'password': json['password'] == null ? undefined : json['password'],
        'isStaff': json['is_staff'] == null ? undefined : json['is_staff'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'isSuperuser': json['is_superuser'] == null ? undefined : json['is_superuser'],
        'avatarLink': json['avatar_link'] == null ? undefined : json['avatar_link'],
        'groups': json['groups'] == null ? undefined : ((json['groups'] as Array<any>).map(GroupFromJSON)),
        'userPermissions': json['user_permissions'] == null ? undefined : ((json['user_permissions'] as Array<any>).map(PermissionFromJSON)),
    };
}

export function UserModifyToJSON(value?: UserModify | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'username': value['username'],
        'email': value['email'],
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'password': value['password'],
        'is_staff': value['isStaff'],
        'is_active': value['isActive'],
        'is_superuser': value['isSuperuser'],
        'avatar_link': value['avatarLink'],
        'groups': value['groups'] == null ? undefined : ((value['groups'] as Array<any>).map(GroupToJSON)),
        'user_permissions': value['userPermissions'] == null ? undefined : ((value['userPermissions'] as Array<any>).map(PermissionToJSON)),
    };
}

