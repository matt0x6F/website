/* tslint:disable */
/* eslint-disable */
/**
 * ooo-yay.com API
 * Resource-based API for ooo-yay.com.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  JSONFeed,
} from '../models/index';
import {
    JSONFeedFromJSON,
    JSONFeedToJSON,
} from '../models/index';

export interface ApiFeedRequest {
    limit?: number;
    offset?: number;
}

/**
 * 
 */
export class FeedApi extends runtime.BaseAPI {

    /**
     * Feed
     */
    async apiFeedRaw(requestParameters: ApiFeedRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JSONFeed>> {
        const queryParameters: any = {};

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JWTAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/feed/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => JSONFeedFromJSON(jsonValue));
    }

    /**
     * Feed
     */
    async apiFeed(requestParameters: ApiFeedRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JSONFeed> {
        const response = await this.apiFeedRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
