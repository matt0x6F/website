name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  backend-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: blog_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
            api/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('api/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install backend dependencies
        run: |
          cd api
          pip install poetry
          poetry install
      - name: Write .env.ci for backend
        run: |
          cat <<EOF > api/.env.ci
          database__name=blog_test
          database__user=postgres
          database__password=postgres
          database__host=localhost
          database__port=5432
          secret_key=changeme
          debug=True
          allowed_hosts=["*"]
          cors__allowed_origins=["*"]
          EOF
      - name: Run backend tests
        run: |
          cd api
          ENV_FILE=.env.ci poetry run python manage.py migrate
          ENV_FILE=.env.ci poetry run pytest

  frontend-unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install frontend dependencies
        run: |
          cd ui
          npm ci
      - name: Run frontend unit tests
        run: |
          cd ui
          npm run test:unit

  frontend-e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install frontend dependencies
        run: |
          cd ui
          npm ci
      - name: Build frontend for preview
        env:
          VITE_API_URL: http://localhost:4100
          VITE_API_URL_INTERNAL: http://localhost:4100
          VITE_PUBLIC_SITE_URL: http://localhost:3100
        run: |
          cd ui
          npm run build
      - name: List ui directory after build
        run: |
          cd ui
          ls -l
          ls -l .output || true
      - name: Install Playwright browsers
        run: |
          cd ui
          npx playwright install --with-deps
      - name: Run frontend e2e tests
        run: |
          cd ui
          npm run test:e2e 