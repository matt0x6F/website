{
  "openapi": "3.1.0",
  "info": {
    "title": "ooo-yay.com API",
    "version": "1.0.0",
    "description": "Resource-based API for ooo-yay.com."
  },
  "paths": {
    "/api/health": {
      "get": {
        "operationId": "core_api_healthcheck",
        "summary": "Health check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        },
        "description": "Returns a simple health check response."
      }
    },
    "/api/token/pair": {
      "post": {
        "operationId": "token_obtain_pair",
        "summary": "Obtain Token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPairOutputSchema"
                }
              }
            }
          }
        },
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPairInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/token/refresh": {
      "post": {
        "operationId": "token_refresh",
        "summary": "Refresh Token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefreshOutputSchema"
                }
              }
            }
          }
        },
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/token/verify": {
      "post": {
        "operationId": "token_verify",
        "summary": "Verify Token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schema"
                }
              }
            }
          }
        },
        "tags": [
          "token"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenVerifyInputSchema"
              }
            }
          },
          "required": true
        }
      }
    },
    "/api/accounts/me": {
      "get": {
        "operationId": "accounts_api_whoami",
        "summary": "Whoami",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelf"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "description": "Returns the calling users details",
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "put": {
        "operationId": "accounts_api_update_self",
        "summary": "Update Self",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelf"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "description": "Updates the calling users details",
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccount"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "accounts_api_delete_self",
        "summary": "Delete Self",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "description": "Deletes the calling user",
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/accounts/sign_up": {
      "post": {
        "operationId": "accounts_api_sign_up",
        "summary": "Sign Up",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSelf"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "description": "Creates a new user",
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAccount"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/accounts/": {
      "get": {
        "operationId": "accounts_api_list_users",
        "summary": "List Users",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedAdminUserDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "description": "Returns a list of all users",
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/accounts/{user_id}": {
      "get": {
        "operationId": "accounts_api_get_user",
        "summary": "Get User",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "title": "User Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "description": "Returns a specific user",
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "put": {
        "operationId": "accounts_api_update_user",
        "summary": "Update User",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "title": "User Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUserDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "description": "Updates a user",
        "tags": [
          "accounts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminUserModify"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "accounts_api_delete_user",
        "summary": "Delete User",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "schema": {
              "title": "User Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthError"
                }
              }
            }
          }
        },
        "description": "Deletes a user",
        "tags": [
          "accounts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/posts/": {
      "get": {
        "operationId": "blog_api_list_posts",
        "summary": "List Posts",
        "parameters": [
          {
            "in": "query",
            "name": "all",
            "schema": {
              "default": false,
              "title": "All",
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "drafts",
            "schema": {
              "default": false,
              "title": "Drafts",
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedPostDetails"
                }
              }
            }
          }
        },
        "tags": [
          "posts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "post": {
        "operationId": "blog_api_create_post",
        "summary": "Create Post",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "posts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostMutate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/posts/slug/{slug}": {
      "get": {
        "operationId": "blog_api_get_post_by_slug",
        "summary": "Get Post By Slug",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "schema": {
              "title": "Slug",
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "year",
            "schema": {
              "title": "Year",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "draft",
            "schema": {
              "default": false,
              "title": "Draft",
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetails"
                }
              }
            }
          }
        },
        "tags": [
          "posts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/posts/{id}": {
      "get": {
        "operationId": "blog_api_get_post_by_id",
        "summary": "Get Post By Id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetails"
                }
              }
            }
          }
        },
        "tags": [
          "posts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "put": {
        "operationId": "blog_api_update_post",
        "summary": "Update Post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDetails"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "posts"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostMutate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "blog_api_delete_post",
        "summary": "Delete Post",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "posts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/posts/{id}/files": {
      "get": {
        "operationId": "blog_api_get_post_files_by_id",
        "summary": "Get Post Files By Id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileDetails"
                  },
                  "title": "Response",
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "posts"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/files/": {
      "get": {
        "operationId": "blog_api_list_files",
        "summary": "List Files",
        "parameters": [
          {
            "in": "query",
            "name": "visibility",
            "schema": {
              "default": "all",
              "enum": [
                "public",
                "private",
                "all"
              ],
              "title": "Visibility",
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedFileDetails"
                }
              }
            }
          }
        },
        "description": "List all files",
        "tags": [
          "files"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "post": {
        "operationId": "blog_api_create_file",
        "summary": "Create File",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDetails"
                }
              }
            }
          }
        },
        "description": "Creates a file with or without post associations.",
        "tags": [
          "files"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "upload": {
                    "format": "binary",
                    "title": "Upload",
                    "type": "string"
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/FileMetadata"
                  }
                },
                "required": [
                  "upload",
                  "metadata"
                ],
                "title": "MultiPartBodyParams",
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/files/{id}": {
      "get": {
        "operationId": "blog_api_get_file",
        "summary": "Get File",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDetails"
                }
              }
            }
          }
        },
        "description": "Gets all the details of a file.",
        "tags": [
          "files"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "put": {
        "operationId": "blog_api_update_file",
        "summary": "Update File",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDetails"
                }
              }
            }
          }
        },
        "description": "Updates a file, namely the posts associated with the file. File properties are immutable.",
        "tags": [
          "files"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FileMutateMetadata"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "blog_api_delete_file",
        "summary": "Delete File",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Deletes a file from the database and S3.",
        "tags": [
          "files"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/comments/": {
      "get": {
        "operationId": "blog_api_list_comments",
        "summary": "List Comments",
        "parameters": [
          {
            "in": "query",
            "name": "post_id",
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Post Id"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "top_level",
            "schema": {
              "default": false,
              "title": "Top Level",
              "type": "boolean"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedCommentList"
                }
              }
            }
          }
        },
        "description": "List all comments for a post",
        "tags": [
          "comments"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "post": {
        "operationId": "blog_api_create_comment",
        "summary": "Create Comment",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentList"
                }
              }
            }
          }
        },
        "description": "Creates a comment",
        "tags": [
          "comments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/comments/moderation/queue": {
      "get": {
        "operationId": "blog_api_mod_queue_list",
        "summary": "Mod Queue List",
        "parameters": [
          {
            "in": "query",
            "name": "reviewed",
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Reviewed"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "default": 0,
              "minimum": 0,
              "title": "Offset",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedAdminCommentList"
                }
              }
            }
          }
        },
        "tags": [
          "moderation",
          "comments"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/comments/moderation/{id}": {
      "put": {
        "operationId": "blog_api_mod_update_comment",
        "summary": "Mod Update Comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminCommentList"
                }
              }
            }
          }
        },
        "tags": [
          "moderation",
          "comments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminCommentUpdate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    },
    "/api/comments/{id}": {
      "get": {
        "operationId": "blog_api_get_comment",
        "summary": "Get Comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentList"
                }
              }
            }
          }
        },
        "description": "Gets all the details of a comment.",
        "tags": [
          "comments"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "put": {
        "operationId": "blog_api_update_comment",
        "summary": "Update Comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentList"
                }
              }
            }
          }
        },
        "tags": [
          "comments"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentMutate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "JWTAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "blog_api_delete_comment",
        "summary": "Delete Comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "title": "Id",
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "comments"
        ],
        "security": [
          {
            "JWTAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/HealthStatus"
          }
        },
        "required": [
          "status"
        ],
        "title": "HealthResponse",
        "type": "object"
      },
      "HealthStatus": {
        "enum": [
          "ok",
          "not_ok"
        ],
        "title": "HealthStatus",
        "type": "string"
      },
      "TokenObtainPairOutputSchema": {
        "properties": {
          "email": {
            "maxLength": 254,
            "title": "Email",
            "type": "string"
          },
          "refresh": {
            "title": "Refresh",
            "type": "string"
          },
          "access": {
            "title": "Access",
            "type": "string"
          }
        },
        "required": [
          "email",
          "refresh",
          "access"
        ],
        "title": "TokenObtainPairOutputSchema",
        "type": "object"
      },
      "TokenObtainPairInputSchema": {
        "properties": {
          "password": {
            "maxLength": 128,
            "title": "Password",
            "type": "string"
          },
          "email": {
            "maxLength": 254,
            "title": "Email",
            "type": "string"
          }
        },
        "required": [
          "password",
          "email"
        ],
        "title": "TokenObtainPairInputSchema",
        "type": "object"
      },
      "TokenRefreshOutputSchema": {
        "properties": {
          "refresh": {
            "title": "Refresh",
            "type": "string"
          },
          "access": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access"
          }
        },
        "required": [
          "refresh",
          "access"
        ],
        "title": "TokenRefreshOutputSchema",
        "type": "object"
      },
      "TokenRefreshInputSchema": {
        "properties": {
          "refresh": {
            "title": "Refresh",
            "type": "string"
          }
        },
        "required": [
          "refresh"
        ],
        "title": "TokenRefreshInputSchema",
        "type": "object"
      },
      "Schema": {
        "properties": {},
        "title": "Schema",
        "type": "object"
      },
      "TokenVerifyInputSchema": {
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          }
        },
        "required": [
          "token"
        ],
        "title": "TokenVerifyInputSchema",
        "type": "object"
      },
      "UserSelf": {
        "description": "Specifies fields that users can see about themselves",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "is_staff": {
            "title": "Is Staff",
            "type": "boolean"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean"
          },
          "date_joined": {
            "format": "date-time",
            "title": "Date Joined",
            "type": "string"
          },
          "avatar_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Link"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "first_name",
          "last_name",
          "is_staff",
          "is_active",
          "date_joined"
        ],
        "title": "UserSelf",
        "type": "object"
      },
      "AuthError": {
        "properties": {
          "details": {
            "title": "Details",
            "type": "string"
          }
        },
        "required": [
          "details"
        ],
        "title": "AuthError",
        "type": "object"
      },
      "UpdateAccount": {
        "description": "Specifies fields that users can provide to update their account",
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "old_password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Password"
          },
          "new_password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Password"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          }
        },
        "title": "UpdateAccount",
        "type": "object"
      },
      "NewAccount": {
        "description": "Specifies fields that users can provide to create an account",
        "properties": {
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "",
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": "",
            "title": "Last Name"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ],
        "title": "NewAccount",
        "type": "object"
      },
      "Input": {
        "properties": {
          "limit": {
            "default": 100,
            "minimum": 1,
            "title": "Limit",
            "type": "integer"
          },
          "offset": {
            "default": 0,
            "minimum": 0,
            "title": "Offset",
            "type": "integer"
          }
        },
        "title": "Input",
        "type": "object"
      },
      "AdminUserDetails": {
        "description": "Specifies fields that admins can see",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "is_staff": {
            "title": "Is Staff",
            "type": "boolean"
          },
          "is_active": {
            "title": "Is Active",
            "type": "boolean"
          },
          "is_superuser": {
            "title": "Is Superuser",
            "type": "boolean"
          },
          "date_joined": {
            "format": "date-time",
            "title": "Date Joined",
            "type": "string"
          },
          "last_login": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          },
          "avatar_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Link"
          },
          "groups": {
            "items": {
              "$ref": "#/components/schemas/Group"
            },
            "title": "Groups",
            "type": "array"
          },
          "user_permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "title": "User Permissions",
            "type": "array"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "first_name",
          "last_name",
          "is_staff",
          "is_active",
          "is_superuser",
          "date_joined",
          "groups",
          "user_permissions"
        ],
        "title": "AdminUserDetails",
        "type": "object"
      },
      "ContentType": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "app_label": {
            "title": "App Label",
            "type": "string"
          },
          "model": {
            "title": "Model",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "app_labeled_name": {
            "title": "App Labeled Name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "app_label",
          "model",
          "name",
          "app_labeled_name"
        ],
        "title": "ContentType",
        "type": "object"
      },
      "Group": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/Permission"
            },
            "title": "Permissions",
            "type": "array"
          }
        },
        "required": [
          "id",
          "name",
          "permissions"
        ],
        "title": "Group",
        "type": "object"
      },
      "PagedAdminUserDetails": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AdminUserDetails"
            },
            "title": "Items",
            "type": "array"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "count"
        ],
        "title": "PagedAdminUserDetails",
        "type": "object"
      },
      "Permission": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "codename": {
            "title": "Codename",
            "type": "string"
          },
          "content_type": {
            "$ref": "#/components/schemas/ContentType"
          }
        },
        "required": [
          "id",
          "name",
          "codename",
          "content_type"
        ],
        "title": "Permission",
        "type": "object"
      },
      "AdminUserModify": {
        "description": "Specifies fields that admins can change",
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "is_staff": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Staff"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          },
          "is_superuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Superuser"
          },
          "avatar_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Link"
          },
          "groups": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Group"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Groups"
          },
          "user_permissions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Permission"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Permissions"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "title": "AdminUserModify",
        "type": "object"
      },
      "PagedPostDetails": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/PostDetails"
            },
            "title": "Items",
            "type": "array"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "count"
        ],
        "title": "PagedPostDetails",
        "type": "object"
      },
      "PostDetails": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "published": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published"
          },
          "author_id": {
            "title": "Author Id",
            "type": "integer"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "created_at",
          "updated_at",
          "author_id",
          "slug"
        ],
        "title": "PostDetails",
        "type": "object"
      },
      "ValidationErrorResponse": {
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        },
        "required": [
          "detail"
        ],
        "title": "ValidationErrorResponse",
        "type": "object"
      },
      "PostMutate": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "published": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          }
        },
        "required": [
          "title",
          "content",
          "slug"
        ],
        "title": "PostMutate",
        "type": "object"
      },
      "FileDetails": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "content_type": {
            "title": "Content Type",
            "type": "string"
          },
          "charset": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Charset"
          },
          "size": {
            "title": "Size",
            "type": "integer"
          },
          "location": {
            "title": "Location",
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/PostSummary"
            },
            "title": "Posts",
            "type": "array"
          },
          "visibility": {
            "title": "Visibility",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "content_type",
          "charset",
          "size",
          "location",
          "created_at",
          "posts",
          "visibility"
        ],
        "title": "FileDetails",
        "type": "object"
      },
      "PostSummary": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "published": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          }
        },
        "required": [
          "id",
          "title",
          "slug"
        ],
        "title": "PostSummary",
        "type": "object"
      },
      "PagedFileDetails": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FileDetails"
            },
            "title": "Items",
            "type": "array"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "count"
        ],
        "title": "PagedFileDetails",
        "type": "object"
      },
      "FileMetadata": {
        "properties": {
          "posts": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posts"
          },
          "visibility": {
            "default": "public",
            "title": "Visibility",
            "type": "string"
          }
        },
        "title": "FileMetadata",
        "type": "object"
      },
      "FileMutateMetadata": {
        "properties": {
          "posts": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Posts"
          }
        },
        "title": "FileMutateMetadata",
        "type": "object"
      },
      "AuthorSummary": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "username": {
            "title": "Username",
            "type": "string"
          }
        },
        "required": [
          "id",
          "username"
        ],
        "title": "AuthorSummary",
        "type": "object"
      },
      "CommentList": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "author": {
            "$ref": "#/components/schemas/AuthorSummary"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "children": {
            "items": {
              "$ref": "#/components/schemas/CommentList"
            },
            "title": "Children",
            "type": "array"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "post": {
            "$ref": "#/components/schemas/PostDetails"
          }
        },
        "required": [
          "id",
          "author",
          "content",
          "children",
          "created_at",
          "updated_at",
          "post"
        ],
        "title": "CommentList",
        "type": "object"
      },
      "PagedCommentList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CommentList"
            },
            "title": "Items",
            "type": "array"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "count"
        ],
        "title": "PagedCommentList",
        "type": "object"
      },
      "CommentCreate": {
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "post_id": {
            "title": "Post Id",
            "type": "integer"
          }
        },
        "required": [
          "content",
          "post_id"
        ],
        "title": "CommentCreate",
        "type": "object"
      },
      "AdminChildCommentList": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "author": {
            "$ref": "#/components/schemas/AuthorSummary"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "post": {
            "$ref": "#/components/schemas/PostDetails"
          },
          "children": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AdminCommentList"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Children"
          },
          "visible": {
            "title": "Visible",
            "type": "boolean"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "reviewed": {
            "title": "Reviewed",
            "type": "boolean"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "required": [
          "id",
          "author",
          "content",
          "post",
          "visible",
          "created_at",
          "updated_at",
          "reviewed"
        ],
        "title": "AdminChildCommentList",
        "type": "object"
      },
      "AdminCommentList": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "author": {
            "$ref": "#/components/schemas/AuthorSummary"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "post": {
            "$ref": "#/components/schemas/PostDetails"
          },
          "children": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AdminChildCommentList"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Children"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AdminParentCommentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "visible": {
            "title": "Visible",
            "type": "boolean"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "reviewed": {
            "title": "Reviewed",
            "type": "boolean"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "required": [
          "id",
          "author",
          "content",
          "post",
          "visible",
          "created_at",
          "updated_at",
          "reviewed"
        ],
        "title": "AdminCommentList",
        "type": "object"
      },
      "AdminParentCommentList": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "author": {
            "$ref": "#/components/schemas/AuthorSummary"
          },
          "content": {
            "title": "Content",
            "type": "string"
          },
          "post": {
            "$ref": "#/components/schemas/PostDetails"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AdminParentCommentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "visible": {
            "title": "Visible",
            "type": "boolean"
          },
          "created_at": {
            "format": "date-time",
            "title": "Created At",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "title": "Updated At",
            "type": "string"
          },
          "reviewed": {
            "title": "Reviewed",
            "type": "boolean"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "required": [
          "id",
          "author",
          "content",
          "post",
          "visible",
          "created_at",
          "updated_at",
          "reviewed"
        ],
        "title": "AdminParentCommentList",
        "type": "object"
      },
      "PagedAdminCommentList": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/AdminCommentList"
            },
            "title": "Items",
            "type": "array"
          },
          "count": {
            "title": "Count",
            "type": "integer"
          }
        },
        "required": [
          "items",
          "count"
        ],
        "title": "PagedAdminCommentList",
        "type": "object"
      },
      "AdminCommentUpdate": {
        "properties": {
          "visible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visible"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "reviewed": {
            "title": "Reviewed",
            "type": "boolean"
          }
        },
        "required": [
          "reviewed"
        ],
        "title": "AdminCommentUpdate",
        "type": "object"
      },
      "CommentMutate": {
        "properties": {
          "content": {
            "title": "Content",
            "type": "string"
          }
        },
        "required": [
          "content"
        ],
        "title": "CommentMutate",
        "type": "object"
      }
    },
    "securitySchemes": {
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "servers": []
}